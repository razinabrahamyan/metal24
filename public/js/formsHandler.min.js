/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**************************************************!*\
  !*** ./resources/user_assets/js/formsHandler.js ***!
  \**************************************************/
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var elements = document.getElementsByClassName('form_block');

var _iterator = _createForOfIteratorHelper(elements),
    _step;

try {
  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    var el = _step.value;
    new Vue({
      el: el,
      data: {
        formData: undefined,
        formSent: false,
        quiz_category: 10
      },
      methods: {
        sendForm: function sendForm(e) {
          var _this = this;

          e.preventDefault();
          var config = {
            headers: {
              Accept: 'application/json',
              'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
          };
          this.formData = new FormData(e.target);
          this.formData.append('page', $('h1').text());
          this.formData.append('link', window.location.href);

          if (!this.formSent) {
            axios.post('/axios/send-form', this.formData, config).then(function (response) {
              if (response.status === 200) {
                Swal.fire({
                  icon: 'success',
                  title: 'Заявка успешно оформлена'
                });
              } else {
                _this.formSent = true;
              }
            })["catch"](function (e) {
              console.log(e);
              _this.formSent = false;
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Заявка уже оформлена'
            });
          }

          this.formSent = true;
        },
        addMask: function addMask() {
          var phoneTarget = $('.form_block input[name=phone]');

          if (phoneTarget.length > 0) {
            var targetValue = phoneTarget.val();
            phoneTarget.mask("+7(999)999-99-99").bind('paste', function (e) {
              e.preventDefault();
              phoneTarget.val(e.originalEvent.clipboardData.getData('Text').replace(/\D/g, '')).trigger('input');
            });

            if (targetValue.length === 16) {
              phoneTarget.trigger('input');
            }
          }
        }
      },
      mounted: function mounted() {
        this.addMask();
      }
    });
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}

window.calculator = new Vue({
  el: '#left_picture_form_wrapper',
  methods: {
    calc: function calc() {
      if ($('.calculator_block').length > 0) {
        setTimeout(function () {
          var price = $('[name="met_type_2"]').val() !== undefined ? $('[name="met_type_2"]').val().replace(/ /g, '') * 1 : 0;
          var forTonn = [7, 8, 9, 10];

          if (forTonn.includes(window.calculator.calc_quiz_category)) {
            $('#totalPrice').text(price * (window.calculator.weight / 1000));
          } else {
            $('#totalPrice').text(price * window.calculator.weight);
          }
        }, 25);
      }
    }
  },
  watch: {
    calc_quiz_category: function calc_quiz_category() {
      $('[name="met_type_2"]').val($("[name=met_type_2] option:first").val());
    },
    weight: function weight() {
      this.calc();
    }
  },
  data: {
    calc_quiz_category: 10,
    weight: 1000
  },
  mounted: function mounted() {
    this.calc();
  }
});
/******/ })()
;